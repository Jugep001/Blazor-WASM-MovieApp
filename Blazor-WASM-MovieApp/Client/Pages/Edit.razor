@page "/edit/{Id:int}"
@using Blazor_WASM_MovieApp.Models
@using Blazor_WASM_MovieApp.Client.Pages.BaseComponents
@using Blazored.FluentValidation
@using Blazorise
@using Blazorise.RichTextEdit
@inherits EditBase


<h1 class="text-center">Edit Movie</h1>

<hr />

@if (isErrorActive)
{
    <div class="alert alert-danger" role="alert">

        <ul class="list-unstyled">
            @foreach (var err in ErrorList)
            {
                <li>

                    <p>@err.ErrorMessage</p>

                </li>

            }
        </ul>

    </div>
}
<div class="container-fluid d-flex justify-content-center">
    <MudPaper Style="@("background: #FFFFFF")" Class="py-16 d-inline-flex justify-content-center" Width="75%">

        <div class="col-md-4 ">
            <EditForm Model="movie" OnValidSubmit="UpdateMovie">
                <FluentValidationValidator />

                <InputNumber class="hidden" @bind-Value="movie.Id"></InputNumber>

                <div class="form-group mt-3">

                    <MudTextField @bind-Value="movie.Title" Label="Title" Variant="Variant.Filled" />
                    <ValidationMessage For="() => movie.Title" />

                </div>

                <div class="row">
                    <div class="form-group mt-3 col">

                        <div class="form-group pb-3 col">

                            <MudDatePicker Editable="true" @bind-Date="movie.ReleaseDate" Label="Release Date" Variant="Variant.Filled" Placeholder="Select Date" />
                            <ValidationMessage For="() => movie.ReleaseDate" />

                        </div>
                        <div class="form-group mt-3 pb-3 col">

                            <MudNumericField @bind-Value="movie.Price" Label="Price" Variant="Variant.Filled" />

                        </div>
                        <div class="form-group mt-3 pb-3 col">

                            <MudSelect T="string" @bind-Value="movie.Rating" Label="Rating" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter">
                                <MudSelectItem Value="@("G")">G</MudSelectItem>
                                <MudSelectItem Value="@("PG")">PG</MudSelectItem>
                                <MudSelectItem Value="@("PG-13")">PG-13</MudSelectItem>
                                <MudSelectItem Value="@("R")">R</MudSelectItem>
                                <MudSelectItem Value="@("NC-17")">NC-17</MudSelectItem>
                            </MudSelect>

                        </div>

                    </div>


                        <div class="form-group mt-3 col">

                            <br />
                            <label class="control-label">Genres</label>

                            <div class="scrollable-div-edit">

                                @foreach (Genre genre in genres)
                                {
                                    if (GenreIds.Contains(genre.Id))
                                    {
                                        <label class="pt-1">


                                            <MudCheckBox T="bool" Label="@genre.Name" Color="MudBlazor.Color.Primary" @key="genre.Id" CheckedChanged="eventArgs => { CheckboxClicked(genre.Id, eventArgs); }" Checked="true"></MudCheckBox>

                                        </label>

                                    }
                                    else
                                    {
                                        <label class="pt-1">

                                            <MudCheckBox T="bool" Label="@genre.Name" Color="MudBlazor.Color.Primary" @key="genre.Id" CheckedChanged="eventArgs => { CheckboxClicked(genre.Id, eventArgs); }"></MudCheckBox>

                                        </label>

                                    }

                                }

                            </div>


                        </div>

                </div>              

                <div class="row">
                    @if (!bClearInputFile)
                    {
                        <div class="form-group col">
                            <div class="d-flex">

                                <InputFile class="form-control" OnChange="LoadImage" accept="image/*" />
                                <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" @onclick="DeleteImage"><span class="iconify" data-icon="bi:trash-fill"></span></MudButton>

                            </div>

                            @if (ImageName != string.Empty)
                            {
                                <div class="form-label">

                                    <label class="control-label">@ImageName loaded</label>

                                </div>
                            }


                        </div>
                    }
                </div>
                <div class="form-group mt-3 pb-4">

                    <MudButton ButtonType="MudBlazor.ButtonType.Submit" Variant="Variant.Filled" Color="MudBlazor.Color.Primary">Save</MudButton>
                    <AuthorizeView Roles="admin" Context="authContext">
                        @if (movie.IsDeleted)
                        {

                            <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" @onclick="@RestoreMovie">Restore</MudButton>

                        }
                    </AuthorizeView>
                    <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Secondary" @onclick="@AddDescription">Manage Description</MudButton>
                    <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Error" @onclick="@Cancel">Cancel</MudButton>

                </div>

            </EditForm>

        </div>
        <div class="col-md-4 ms-4">

            <div class="form-group col overflow-auto">

                <div class="scrollable-div-edit">

                    <MudDropContainer T="DropItem" Items="@_items" @ref="_container" ItemsSelector="@((item,dropzone) => item.Identifier == dropzone)" ItemDropped="(credit) => Drop(credit)" Class="d-flex flex-wrap flex-grow-1">
                        <ChildContent>

                            <MudPaper Class="ma-4 flex-grow-1">
                                <MudList Clickable="true" Class="d-flex flex-column mud-height-full">

                                    <MudListSubheader>Credits</MudListSubheader>
                                    <MudDropZone T="DropItem" Identifier="1" Class="flex-grow-1" AllowReorder="true" />

                                </MudList>
                            </MudPaper>

                        </ChildContent>
                        <ItemRenderer>
                            <MudListItem Text="@($"{context.Person.Vorname} {context.Person.Name}")" OnClick="() => ShowEditCredit(context)" />
                        </ItemRenderer>
                    </MudDropContainer>
                    <MudFab Color="MudBlazor.Color.Secondary" StartIcon="@Icons.Material.Filled.Add" OnClick="(() => ShowAddCredit())" Class="float-end" />

                </div>
            </div>


        </div>

    </MudPaper>
</div>
@code {





}
